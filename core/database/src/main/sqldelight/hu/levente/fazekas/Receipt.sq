import hu.levente.fazekas.receiptscanner.database.Currency;
import kotlinx.datetime.Instant;

CREATE TABLE IF NOT EXISTS Receipt (
    id INTEGER NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    date INTEGER AS Instant NOT NULL,
    currency TEXT AS Currency NOT NULL,
    sumOfPrice INTEGER NOT NULL,
    description TEXT,
    imageUri TEXT NOT NULL
);

insert{
INSERT INTO Receipt( name, date, currency, sumOfPrice, description, imageUri)
VALUES(?,?, ?,  ?,?,?);
SELECT last_insert_rowid();
}

selectWithFilter:
SELECT id, name, date, currency, sumOfPrice
FROM Receipt
WHERE
((name LIKE :searchWord OR :searchWord IS NULL) OR
(description LIKE :searchWord OR :searchWord IS NULL)) AND
(id IN (SELECT receiptId FROM ReceiptTagCrossRef WHERE tagId IN :tags))
ORDER BY date DESC;

selectByTag:
SELECT Tag.name, currency, SUM(sumOfPrice) AS sumOfPrice
FROM Receipt
JOIN ReceiptTagCrossRef ON Receipt.id = ReceiptTagCrossRef.receiptId
JOIN Tag ON Tag.id = ReceiptTagCrossRef.tagId
GROUP BY Tag.name;


selectByName:
SELECT name, currency, SUM(sumOfPrice) AS sumOfPrice
FROM Receipt
GROUP BY name;

selectById:
SELECT * FROM Receipt
WHERE Receipt.id = :id;

deleteById:
DELETE FROM Receipt WHERE id = :id;

update:
UPDATE Receipt
SET
name = :name,
date = :date,
currency = :currency,
sumOfPrice = :sumOfPrice,
description = :description,
imageUri = :imageUri
WHERE id = :id;
